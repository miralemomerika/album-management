"""add album, song, music_service, modify relationships

Revision ID: 5dc625cef777
Revises: a2157058840a
Create Date: 2024-01-28 01:53:22.994898

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "5dc625cef777"
down_revision: Union[str, None] = "a2157058840a"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "music_services",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("service_name", sa.String(), nullable=True),
        sa.Column("plan_type", sa.String(), nullable=True),
        sa.Column("payment_method_used", sa.String(), nullable=True),
        sa.Column("first_payment_date", sa.Date(), nullable=True),
        sa.Column("adspower_serial", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("password", sa.String(), nullable=True),
        sa.Column("phone_number", sa.String(), nullable=True),
        sa.Column("sms_inbox_link", sa.String(), nullable=True),
        sa.Column("cc_details_url", sa.String(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_music_services_id"), "music_services", ["id"], unique=False
    )
    op.create_table(
        "albums",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("band_name", sa.String(), nullable=True),
        sa.Column("band_members", sa.String(), nullable=True),
        sa.Column("album_details_url", sa.String(), nullable=True),
        sa.Column("music_type", sa.String(), nullable=True),
        sa.Column("creation_date", sa.Date(), nullable=True),
        sa.Column("upload_date", sa.Date(), nullable=True),
        sa.Column("approval_date", sa.Date(), nullable=True),
        sa.Column("status", sa.String(), nullable=True),
        sa.Column("distributor_id", sa.Integer(), nullable=True),
        sa.Column("music_services_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["distributor_id"],
            ["distributors.id"],
        ),
        sa.ForeignKeyConstraint(
            ["music_services_id"],
            ["music_services.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_albums_id"), "albums", ["id"], unique=False)
    op.create_table(
        "songs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("duration", sa.String(), nullable=True),
        sa.Column("album_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["album_id"],
            ["albums.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_songs_id"), "songs", ["id"], unique=False)
    op.add_column(
        "distributors",
        sa.Column("commission_percentage", sa.Float(), nullable=True),
    )
    op.drop_column("distributors", "commision")
    op.add_column("users", sa.Column("dob", sa.Date(), nullable=True))
    op.add_column(
        "users", sa.Column("business_name", sa.String(), nullable=True)
    )
    op.add_column(
        "users", sa.Column("warmup_phase_until", sa.String(), nullable=True)
    )
    op.add_column(
        "users", sa.Column("address_line_1", sa.String(), nullable=True)
    )
    op.add_column("users", sa.Column("city", sa.String(), nullable=True))
    op.add_column("users", sa.Column("province", sa.String(), nullable=True))
    op.add_column(
        "users", sa.Column("postal_code", sa.Integer(), nullable=True)
    )
    op.add_column(
        "users", sa.Column("foreign_TIN", sa.String(), nullable=True)
    )
    op.add_column("users", sa.Column("first_name", sa.String(), nullable=True))
    op.add_column("users", sa.Column("last_name", sa.String(), nullable=True))
    op.drop_column("users", "warmup_phase")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column(
            "warmup_phase", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
    )
    op.drop_column("users", "last_name")
    op.drop_column("users", "first_name")
    op.drop_column("users", "foreign_TIN")
    op.drop_column("users", "postal_code")
    op.drop_column("users", "province")
    op.drop_column("users", "city")
    op.drop_column("users", "address_line_1")
    op.drop_column("users", "warmup_phase_until")
    op.drop_column("users", "business_name")
    op.drop_column("users", "dob")
    op.add_column(
        "distributors",
        sa.Column(
            "commision", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
    )
    op.drop_column("distributors", "commission_percentage")
    op.drop_index(op.f("ix_songs_id"), table_name="songs")
    op.drop_table("songs")
    op.drop_index(op.f("ix_albums_id"), table_name="albums")
    op.drop_table("albums")
    op.drop_index(op.f("ix_music_services_id"), table_name="music_services")
    op.drop_table("music_services")
    # ### end Alembic commands ###
