"""modify base models attributes

Revision ID: eddb2673f0d9
Revises: 113bdeb89491
Create Date: 2024-01-27 22:19:13.972406

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "eddb2673f0d9"
down_revision: Union[str, None] = "113bdeb89491"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "payment_informations",
        sa.Column("vcc_from", sa.String(), nullable=True),
    )
    op.add_column(
        "payment_informations",
        sa.Column("revolut_card_used_no", sa.String(), nullable=True),
    )
    op.add_column(
        "payment_informations",
        sa.Column("card_country", sa.String(), nullable=True),
    )
    op.add_column(
        "payment_informations",
        sa.Column("card_address", sa.String(), nullable=True),
    )
    op.add_column(
        "payment_informations",
        sa.Column("multi_use_or_one_time", sa.String(), nullable=True),
    )
    op.add_column(
        "payment_informations",
        sa.Column("card_name_used", sa.String(), nullable=True),
    )
    op.add_column(
        "user_statuses", sa.Column("am_password", sa.String(), nullable=True)
    )
    op.add_column(
        "user_statuses", sa.Column("active", sa.String(), nullable=True)
    )
    op.add_column(
        "user_statuses", sa.Column("device_type", sa.String(), nullable=True)
    )
    op.add_column(
        "user_statuses", sa.Column("device_id", sa.String(), nullable=True)
    )
    op.add_column(
        "user_statuses",
        sa.Column("previous_device_connected", sa.String(), nullable=True),
    )
    op.add_column(
        "user_statuses", sa.Column("register_date", sa.Date(), nullable=True)
    )
    op.add_column(
        "user_statuses",
        sa.Column("registration_device", sa.String(), nullable=True),
    )
    op.add_column(
        "user_statuses",
        sa.Column("age_in_no_of_days", sa.Integer(), nullable=True),
    )
    op.drop_column("user_statuses", "current_state")
    op.drop_column("user_statuses", "location")
    op.drop_column("user_statuses", "timestamp")
    op.add_column("users", sa.Column("created_by", sa.String(), nullable=True))
    op.add_column("users", sa.Column("date_created", sa.Date(), nullable=True))
    op.add_column(
        "users", sa.Column("subscription_type", sa.String(), nullable=True)
    )
    op.add_column(
        "users", sa.Column("subscription_status", sa.String(), nullable=True)
    )
    op.add_column(
        "users", sa.Column("cancellation_date", sa.Date(), nullable=True)
    )
    op.add_column("users", sa.Column("skip_trial", sa.String(), nullable=True))
    op.add_column(
        "users", sa.Column("warmup_phase", sa.String(), nullable=True)
    )
    op.drop_constraint("users_email_key", "users", type_="unique")
    op.drop_column("users", "email")
    op.drop_column("users", "first_name")
    op.drop_column("users", "address")
    op.drop_column("users", "phone_number")
    op.drop_column("users", "last_name")
    op.drop_column("users", "dob")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column("dob", sa.DATE(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "users",
        sa.Column(
            "last_name", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "users",
        sa.Column(
            "phone_number", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "users",
        sa.Column("address", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "users",
        sa.Column(
            "first_name", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "users",
        sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.create_unique_constraint("users_email_key", "users", ["email"])
    op.drop_column("users", "warmup_phase")
    op.drop_column("users", "skip_trial")
    op.drop_column("users", "cancellation_date")
    op.drop_column("users", "subscription_status")
    op.drop_column("users", "subscription_type")
    op.drop_column("users", "date_created")
    op.drop_column("users", "created_by")
    op.add_column(
        "user_statuses",
        sa.Column("timestamp", sa.DATE(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "user_statuses",
        sa.Column(
            "location", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "user_statuses",
        sa.Column(
            "current_state", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
    )
    op.drop_column("user_statuses", "age_in_no_of_days")
    op.drop_column("user_statuses", "registration_device")
    op.drop_column("user_statuses", "register_date")
    op.drop_column("user_statuses", "previous_device_connected")
    op.drop_column("user_statuses", "device_id")
    op.drop_column("user_statuses", "device_type")
    op.drop_column("user_statuses", "active")
    op.drop_column("user_statuses", "am_password")
    op.drop_column("payment_informations", "card_name_used")
    op.drop_column("payment_informations", "multi_use_or_one_time")
    op.drop_column("payment_informations", "card_address")
    op.drop_column("payment_informations", "card_country")
    op.drop_column("payment_informations", "revolut_card_used_no")
    op.drop_column("payment_informations", "vcc_from")
    # ### end Alembic commands ###
